{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qas\\\\Desktop\\\\Front End Developer Tutorial\\\\6 - React\\\\EXTRA - Class Based Component\\\\src\\\\components\\\\UserFinder.js\";\nimport { Fragment, Component } from \"react\";\nimport classes from \"./UserFinder.module.css\";\nimport Users from \"./Users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: \"u1\",\n  name: \"Qasim\"\n}, {\n  id: \"u2\",\n  name: \"Idris\"\n}, {\n  id: \"u3\",\n  name: \"Catherine\"\n}];\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: \"\"\n    };\n  } // Lifecycle Method - componentDidMount is a UseEffect alternative typically for API fetch requests, it only runs once!\n\n\n  componentDidMount() {\n    //send http requests..\n    this.setState({\n      filteredUsers: DUMMY_USERS\n    });\n  } // Lifecycle Method - componentDidUpdate is useEffect with a changing dependancy!\n\n\n  componentDidUpdate(prevProps, prevState) {\n    // If the search term is DIFFERENT from the last search term, this prevents an infinite loop.\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  } // Lifecycle Method - componentWillUnmount is essentially the useEffect cleanup function!\n\n\n  componentWillUnmount() {\n    console.log(\"User Will unmount!\");\n  }\n\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserFinder;","map":{"version":3,"sources":["C:/Users/Qas/Desktop/Front End Developer Tutorial/6 - React/EXTRA - Class Based Component/src/components/UserFinder.js"],"names":["Fragment","Component","classes","Users","DUMMY_USERS","id","name","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidMount","setState","componentDidUpdate","prevProps","prevState","filter","user","includes","componentWillUnmount","console","log","searchChangeHandler","event","target","value","render","finder","bind"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAHkB,CAApB;;AAMA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjCO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID,GAPgC,CASjC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,QAAL,CAAc;AAAEH,MAAAA,aAAa,EAAEN;AAAjB,KAAd;AACD,GAbgC,CAejC;;;AACAU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC;AACA,QAAIA,SAAS,CAACL,UAAV,KAAyB,KAAKF,KAAL,CAAWE,UAAxC,EAAoD;AAClD,WAAKE,QAAL,CAAc;AACZH,QAAAA,aAAa,EAAEN,WAAW,CAACa,MAAZ,CAAoBC,IAAD,IAChCA,IAAI,CAACZ,IAAL,CAAUa,QAAV,CAAmB,KAAKV,KAAL,CAAWE,UAA9B,CADa;AADH,OAAd;AAKD;AACF,GAzBgC,CA2BjC;;;AACAS,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB,SAAKX,QAAL,CAAc;AAAEF,MAAAA,UAAU,EAAEa,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAd;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,MAAxB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKL,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA5CgC;;AA+CnC,eAAeH,UAAf","sourcesContent":["import { Fragment, Component } from \"react\";\r\nimport classes from \"./UserFinder.module.css\";\r\nimport Users from \"./Users\";\r\n\r\nconst DUMMY_USERS = [\r\n  { id: \"u1\", name: \"Qasim\" },\r\n  { id: \"u2\", name: \"Idris\" },\r\n  { id: \"u3\", name: \"Catherine\" },\r\n];\r\n\r\nclass UserFinder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      filteredUsers: [],\r\n      searchTerm: \"\",\r\n    };\r\n  }\r\n\r\n  // Lifecycle Method - componentDidMount is a UseEffect alternative typically for API fetch requests, it only runs once!\r\n  componentDidMount() {\r\n    //send http requests..\r\n    this.setState({ filteredUsers: DUMMY_USERS });\r\n  }\r\n\r\n  // Lifecycle Method - componentDidUpdate is useEffect with a changing dependancy!\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // If the search term is DIFFERENT from the last search term, this prevents an infinite loop.\r\n    if (prevState.searchTerm !== this.state.searchTerm) {\r\n      this.setState({\r\n        filteredUsers: DUMMY_USERS.filter((user) =>\r\n          user.name.includes(this.state.searchTerm)\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  // Lifecycle Method - componentWillUnmount is essentially the useEffect cleanup function!\r\n  componentWillUnmount() {\r\n    console.log(\"User Will unmount!\");\r\n  }\r\n\r\n  searchChangeHandler(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.finder}>\r\n          <input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />\r\n        </div>\r\n        <Users users={this.state.filteredUsers} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserFinder;\r\n"]},"metadata":{},"sourceType":"module"}