{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qas\\\\Desktop\\\\Front End Developer Tutorial\\\\6 - React\\\\EXTRA - Class Based Component\\\\src\\\\components\\\\Users.js\";\nimport { Component, useState } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: \"u1\",\n  name: \"Qas\"\n}, {\n  id: \"u2\",\n  name: \"Id\"\n}, {\n  id: \"u3\",\n  name: \"Cat\"\n}];\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUsers: true // This is how we use State in class based components, state is ALWAYS an object.\n\n    };\n  }\n\n  toggleUsersHandler() {\n    this.setState(curState => {\n      return {\n        showUsers: !curState.showUsers\n      };\n    }); // Setting state to the opposite of what it was\n  }\n\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: DUMMY_USERS.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? \"Hide\" : \"Show\", \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/Qas/Desktop/Front End Developer Tutorial/6 - React/EXTRA - Class Based Component/src/components/Users.js"],"names":["Component","useState","User","classes","DUMMY_USERS","id","name","Users","constructor","state","showUsers","toggleUsersHandler","setState","curState","render","usersList","map","user","users","bind"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAHkB,CAApB;;AAMA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA,CACM;;AADN,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,QAAL,CAAeC,QAAD,IAAc;AAC1B,aAAO;AAAEH,QAAAA,SAAS,EAAE,CAACG,QAAQ,CAACH;AAAvB,OAAP;AACD,KAFD,EADmB,CAGf;AACL;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,gBACb;AAAA,gBACGX,WAAW,CAACY,GAAZ,CAAiBC,IAAD,iBACf,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAAI,CAACX;AAA/B,SAAWW,IAAI,CAACZ,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;;AAQA,wBACE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACe,KAAxB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKP,kBAAL,CAAwBQ,IAAxB,CAA6B,IAA7B,CAAjB;AAAA,mBACG,KAAKV,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,MADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,KAAKD,KAAL,CAAWC,SAAX,IAAwBK,SAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA/B2B;;AAkC9B,eAAeR,KAAf","sourcesContent":["import { Component, useState } from \"react\";\n\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\n\nconst DUMMY_USERS = [\n  { id: \"u1\", name: \"Qas\" },\n  { id: \"u2\", name: \"Id\" },\n  { id: \"u3\", name: \"Cat\" },\n];\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUsers: true, // This is how we use State in class based components, state is ALWAYS an object.\n    };\n  }\n\n  toggleUsersHandler() {\n    this.setState((curState) => {\n      return { showUsers: !curState.showUsers };\n    }); // Setting state to the opposite of what it was\n  }\n\n  render() {\n    const usersList = (\n      <ul>\n        {DUMMY_USERS.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? \"Hide\" : \"Show\"} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n  }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}